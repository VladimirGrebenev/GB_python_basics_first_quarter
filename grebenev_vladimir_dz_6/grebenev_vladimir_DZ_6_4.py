# # Geek University Python-разработки - первая четверть - Основы языка Python.
# # Домашняя работа к уроку №6 задание 4(3+)
# Есть два файла: в одном хранятся ФИО пользователей сайта, а в другом — данные об их хобби.
# Известно, что при хранении данных используется принцип: одна строка — один пользователь,
# разделитель между значениями — запятая. Написать код, загружающий данные из обоих файлов
# и формирующий из них словарь: ключи — ФИО, значения — данные о хобби. Сохранить словарь в файл.
# Проверить сохранённые данные. Если в файле, хранящем данные о хобби, меньше записей, чем в файле
# с ФИО, задаём в словаре значение None. Если наоборот — выходим из скрипта с кодом «1».
# При решении задачи считать, что объём данных в файлах во много раз меньше объема ОЗУ.
# Фрагмент файла с данными о пользователях (users.csv):
# Иванов,Иван,Иванович
# Петров,Петр,Петрович
# Фрагмент файла с данными о хобби (hobby.csv):
# скалолазание,охота
# горные лыжи
# * (вместо 3) Решить задачу 3 для ситуации, когда объём данных в файлах превышает объём ОЗУ
# (разумеется, не нужно реально создавать такие большие файлы, это просто задел на будущее проекта).
# Также реализовать парсинг данных из файлов — получить отдельно фамилию, имя и отчество для
# пользователей и название каждого хобби: преобразовать в какой-нибудь контейнерный
# тип (список, кортеж, множество, словарь). Обосновать выбор типа. Подумать, какие могут
# возникнуть проблемы при парсинге. В словаре должны храниться данные, полученные в результате
# парсинга.

users = []
with open('site_users.csv', encoding='utf-8') as f_users:
    for line in f_users:
        name = (line.replace('\n', '').split(','))
        users.append(name)

hobby = []
with open('users_hobby.csv', encoding='utf-8') as f_hobby:
    for line in f_hobby:
        h_list = (line.replace('\n', '').split(','))
        hobby.append(h_list)

with open('hobby_dict2.txt', 'w', encoding='utf-8') as f_dict:
    if len(hobby) < len(users):
        while len(hobby) < len(users):
            hobby.append(None)
        new_f = (f_dict.write(f'{" ".join(users[i])}: {" ".join(hobby[i])} \n') for i in range(0,
                                                                                               len(users)))
        print(*new_f)
    elif len(hobby) == len(users):
        new_f = (f_dict.write(f'{" ".join(users[i])}: {", ".join(hobby[i])} \n') for i in range(
            0, len(users)))
        print(*new_f)
    else:
        quit(1)